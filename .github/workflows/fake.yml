name: ✨ Fake Build Demo - Output Showcase ✨

on:
  workflow_dispatch: # Allow manual triggering

jobs:
  # =========================================
  # Job 1: Simulate Generation & Basic Output
  # =========================================
  generate_metadata:
    name: ⚙️ Generate Fake Metadata
    runs-on: ubuntu-latest
    outputs: # Define outputs for other jobs to use
      build_version: ${{ steps.set_info.outputs.version }}
      build_id: ${{ steps.set_info.outputs.unique_id }}
      build_status_env: ${{ steps.set_env.outputs.status_msg }} # Outputting what was set in ENV

    steps:
      - name: 📦 Checkout Code (Placeholder)
        uses: actions/checkout@v4
        # In a real build, you'd check out code here

      - name: 🏷️ Set Fake Build Info (Step Output)
        id: set_info # Give this step an ID to reference its outputs
        run: |
          FAKE_VERSION="1.5.${{ github.run_number }}"
          FAKE_ID="build-$(date +%s)-${RANDOM}"
          echo "Simulating setting build info..."
          cat << EOF >> $GITHUB_OUTPUT
          version=${FAKE_VERSION}
          unique_id=${FAKE_ID}
          EOF
          echo "Generated Version: ${FAKE_VERSION}"
          echo "Generated ID: ${FAKE_ID}"
          sleep 1 # Simulate work

      - name: 🌍 Set Environment Variable
        id: set_env
        run: |
          STATUS_MESSAGE="✅ Simulated Success"
          echo "Setting BUILD_STATUS environment variable..."
          cat << EOF >> $GITHUB_ENV
          BUILD_STATUS=${STATUS_MESSAGE}
          EOF
          cat << EOF >> $GITHUB_OUTPUT
          status_msg=${STATUS_MESSAGE}
          EOF
          sleep 1 # Simulate work

      - name: 📝 Add Initial Info to Summary
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## 🚀 Build Metadata Generation

          | Key             | Value                                     |
          |-----------------|-------------------------------------------|
          | **Version**     | \`${{ steps.set_info.outputs.version }}\`          |
          | **Build ID**    | \`${{ steps.set_info.outputs.unique_id }}\`    |
          | **Commit**      | \`${{ github.sha }}\` |
          | **Triggered by**| @${{ github.actor }}                          |
          | **Status (ENV)**| ${{ env.BUILD_STATUS }}                   |

          Metadata generation step completed.
          EOF

  # =============================================
  # Job 2: Simulate Processing & Richer Output
  # =============================================
  process_and_report:
    name: 📊 Process & Report Results
    runs-on: ubuntu-latest
    needs: generate_metadata # Depends on the first job

    steps:
      - name: 📥 Receive Metadata (Job Output)
        run: |
          cat << EOF
          Received from previous job:
          - Version: ${{ needs.generate_metadata.outputs.build_version }}
          - Build ID: ${{ needs.generate_metadata.outputs.build_id }}
          - Status Check: ${{ needs.generate_metadata.outputs.build_status_env }}
          EOF
          sleep 1 # Simulate work

      - name: 📄 Create Fake Report File
        run: |
          echo "Creating a dummy report file..."
          mkdir -p ./fake_reports
          cat << EOF > ./fake_reports/summary.json
          {
            "version": "${{ needs.generate_metadata.outputs.build_version }}",
            "buildId": "${{ needs.generate_metadata.outputs.build_id }}",
            "tests_passed": 142,
            "tests_failed": 3,
            "tests_skipped": 5,
            "coverage": "88%",
            "status": "Warning"
          }
          EOF
          echo "Dummy report created at ./fake_reports/summary.json"
          sleep 1 # Simulate work

      - name: 📢 Add Annotations
        run: |
          cat << 'EOF'
          Adding some example annotations...
          ::notice file=src/fake_module.js,line=10,col=5::ℹ️ Just an informational notice about this line.
          ::warning file=src/another_fake.js,line=35::⚠️ Consider refactoring this section for clarity.
          ::error file=test/old_test.js,line=1,title=Deprecated Test Found::⛔ This test file uses a deprecated library.
          EOF
          sleep 1 # Simulate work

      - name: ✍️ Add More Details to Summary
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY

          ---
          ## 📊 Simulated Processing Results

          Processing completed for Build ID: \`${{ needs.generate_metadata.outputs.build_id }}\`

          ### Test Simulation
          - ✅ Passed: 142
          - ❌ Failed: 3
          - ⏭️ Skipped: 5
          - 🎯 Coverage: 88%

          ### Code Quality Notes
          - 📢 Check the **Annotations** section for details (1 notice, 1 warning, 1 error reported).
          - A detailed report (\`summary.json\`) is available as a build artifact.
          EOF

      - name: ⬆️ Upload Fake Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-analysis-report-${{ needs.generate_metadata.outputs.build_id }} # Artifact name
          path: ./fake_reports/summary.json # Path to the file(s) to upload
          retention-days: 7 # Optional: How long to keep the artifact

      - name: 🎉 Final Log Message
        run: echo "All demonstration steps complete!"
